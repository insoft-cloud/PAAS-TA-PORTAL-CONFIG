# Spring properties
spring:
  application:
    name: PortalApi  # Service registers under this name
  security:
    username: admin
    password: openpaasta
  boot:
    #Spring boot admin settings
    admin:
      routes:
        endpoints: env,metrics,trace,info,trace,heapdump,hystrix.stream,docs,turbine
        #Timeintervalin ms to update the status of App
      monitor:
        perio: 10000
        #LifeTime of App status in ms.
        status-lifetime: 10000
        #Connection Timeout in ms when App's status and info
        connect-timeout: 2000
        #Read Timeout in ms when App's status and info
        read-timeout: 5000
      metadata-keys-to-sanitize: .password$,.*secret$,.*key$,.$token$,.credentials.,.*vcap_services$

##INFRA_ADMIN Settings
project:
  name: paasta-api
  artifactId: paasta-cf-api
  description: paasta-cf-api management service
info:
  app:
    encoding: Encoding - UTF-8
  java:
    source: Source - java ver
    target: Instance1 - Java ver
  spring:
    profiles: ${spring.profiles.active:default}
  build:
    name: ${project.name}
    artifact: ${project.artifactId}
    description: ${project.description}

# HTTP Server
server:
  port: ${PORT:2222}   # HTTP (Tomcat) port

tailsocket:
  port: 5555

management:     # If you set off security...
  security:
    enabled: false

hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 100
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 5
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 60000
        requestVolumeThreshold: 3
      execution:
        isolation:
          #strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 60000


# CloudFoundry API Url
cloudfoundry:
  cc:
    api:
      url: https://api.xxx.xxx.xxx.xxx.xip.io
      uaaUrl: https://uaa.xxx.xxx.xxx.xxx.xip.io
      sslSkipValidation: true
  # CloudFoundry Login information
  user:
    admin:
      username: CF_ADMIN_ACCOUNT # 재설정
      password: CF_ADMIN_PASSWORD # 재설정
    uaaClient:
      clientId: login
      clientSecret: login-secret # CF 설치 설정에 따라 변경, 기본설정 일 경우 현재 설정값 사용 - 재설정
      adminClientId: admin
      adminClientSecret: admin-secret # CF 설치 설정에 따라 변경, 기본설정 일 경우 현재 설정값 사용 - 재설정
      loginClientId: login
      loginClientSecret: login-secret # CF 설치 설정에 따라 변경, 기본설정 일 경우 현재 설정값 사용 - 재설정
      skipSSLValidation: true
  authorization: cf-Authorization


abacus:
  url: http://paasta-usage-reporting.115.68.46.187.xip.io/v1

# 포탈 상세 모니터링
monitoring:
  api:
    url: http://monitapi.xxx.xxx.xxx.xxx.xip.io #xxx.xxx.xxx.xxx 는 Monitoring 서버 주소 - 재설정

multipart:
  maxFileSize: 1000Mb
  maxRequestSize: 1000Mb



---
spring:
  profiles: local
  Socket: 'The host information for the socket is set to Localhost'
paasta:
  portal:
    api:
      authorization:
        base64: Basic YWRtaW46b3BlbnBhYXN0YQ==
      zuulUrl:
        cfapi: http://localhost:2225/portalapi
        commonapi: http://localhost:2225/commonapi
        storageapi: http://localhost:2225/storageapi
    storageapi:
      type: swift
---
spring:
  profiles: dev
  Socket: 'The host information for the socket is set to ServerIP'
paasta:
  portal:
    api:
      authorization:
        base64: Basic YWRtaW46b3BlbnBhYXN0YQ==
      zuulUrl:
        cfapi: http://xxx.xxx.xxx.xxx:2225/portalapi #xxx.xxx.xxx.xxx 는 GateWay 서버 주소 - 재설정
        commonapi: http://xxx.xxx.xxx.xxx:2225/commonapi #xxx.xxx.xxx.xxx 는 GateWay 서버 주소 - 재설정
        storageapi: http://xxx.xxx.xxx.xxx:2225/storageapi #xxx.xxx.xxx.xxx 는 GateWay 서버 주소 - 재설정
    storageapi:
      type: swift
